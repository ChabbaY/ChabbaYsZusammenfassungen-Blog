import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as l,b as e,d as n,o as r}from"./app-CEbH5TK9.js";const s={},o={class:"MathJax",jax:"SVG",style:{position:"relative"}},Q={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.895ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 10561.7 1000","aria-hidden":"true"},d={class:"MathJax",jax:"SVG",style:{position:"relative"}},T={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{position:"relative"}},h={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},g={class:"MathJax",jax:"SVG",style:{position:"relative"}},u={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.506ex",height:"1.717ex",role:"img",focusable:"false",viewBox:"0 -677 2433.6 759","aria-hidden":"true"},p={class:"MathJax",jax:"SVG",style:{position:"relative"}},c={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.286ex",height:"1.971ex",role:"img",focusable:"false",viewBox:"0 -677 2336.6 871","aria-hidden":"true"},f={class:"MathJax",jax:"SVG",style:{position:"relative"}},w={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.912ex",height:"1.946ex",role:"img",focusable:"false",viewBox:"0 -666 4381 860","aria-hidden":"true"},H={class:"MathJax",jax:"SVG",style:{position:"relative"}},b={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.067ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6659.4 1000","aria-hidden":"true"},x={class:"MathJax",jax:"SVG",style:{position:"relative"}},k={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.525ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2000 1000","aria-hidden":"true"},v={class:"MathJax",jax:"SVG",style:{position:"relative"}},M={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.431ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3284.6 1000","aria-hidden":"true"},L={class:"MathJax",jax:"SVG",style:{position:"relative"}},V={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.286ex",height:"1.946ex",role:"img",focusable:"false",viewBox:"0 -666 2336.6 860","aria-hidden":"true"},Z={class:"MathJax",jax:"SVG",style:{position:"relative"}},S={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"24.043ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 10627 1000","aria-hidden":"true"},y={class:"MathJax",jax:"SVG",style:{position:"relative"}},C={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.971ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 429 705","aria-hidden":"true"},B={class:"MathJax",jax:"SVG",style:{position:"relative"}},z={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","aria-hidden":"true"},A={class:"MathJax",jax:"SVG",style:{position:"relative"}},R={style:{"vertical-align":"-1.091ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.907ex",height:"3.048ex",role:"img",focusable:"false",viewBox:"0 -864.9 5704.8 1347.1","aria-hidden":"true"},D={class:"MathJax",jax:"SVG",style:{position:"relative"}},P={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.971ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 429 705","aria-hidden":"true"},I={class:"MathJax",jax:"SVG",style:{position:"relative"}},j={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","aria-hidden":"true"},E={class:"MathJax",jax:"SVG",style:{position:"relative"}},O={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.986ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 878 453","aria-hidden":"true"},F={class:"MathJax",jax:"SVG",style:{position:"relative"}},U={style:{"vertical-align":"-1.091ex"},xmlns:"http://www.w3.org/2000/svg",width:"15.111ex",height:"3.048ex",role:"img",focusable:"false",viewBox:"0 -864.9 6679.2 1347.1","aria-hidden":"true"},G={class:"MathJax",jax:"SVG",style:{position:"relative"}},W={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},J={class:"MathJax",jax:"SVG",style:{position:"relative"}},N={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},K={class:"MathJax",jax:"SVG",style:{position:"relative"}},X={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},q={class:"MathJax",jax:"SVG",style:{position:"relative"}},Y={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"};function $(_,t){return r(),a("div",null,[t[100]||(t[100]=l('<h1 id="rechnerarchitektur" tabindex="-1"><a class="header-anchor" href="#rechnerarchitektur"><span>Rechnerarchitektur</span></a></h1><h2 id="_1-ubersicht" tabindex="-1"><a class="header-anchor" href="#_1-ubersicht"><span>1 Übersicht</span></a></h2><p>Computerentwicklung</p><ul><li>um 1700: <strong>Leibniz Rechenmaschine</strong></li><li>1941: <strong>Zuse Z3</strong> (Deutschland) <ul><li>Hardware Schaltung (Relais)</li></ul></li><li>1947: <strong>ENIAC</strong> (USA) <ul><li>Elektrische Schaltung (&gt; 17000 Elektronenröhren, sehr anfällig!)</li><li>ab 1950 mit <strong>Transistoren</strong></li></ul></li><li>1968: IBM System/360 (Mainframe)</li><li>1976: Apple I (Minicomputer)</li><li>1981: IBM PC (Minicomputer)</li><li>1999: HP Workstation</li><li>2016: Dell Latitude</li><li>2018: Google Pixel 3 XL</li></ul><p>Zunehmende Miniaturisierung &amp; Integration</p><ul><li><strong>Integrated Circuits</strong> statt diskreter Elemente</li><li>Immer mehr Transistoren auf der selben Fläche</li><li>Immer mehr Funktionalität in einem Chip: <strong>System-on-Chip</strong></li></ul><p>Gegenstände mit prozessorbasierter Steuerung</p><ul><li>Fabrik</li><li>Rechenzentrum</li><li>Smartphone / Tablet</li><li>Laptop</li><li>Smart Home</li><li>Aufzug</li><li>Automotive</li><li>Zug</li><li>Fernseher</li></ul><h2 id="_2-grundlagen" tabindex="-1"><a class="header-anchor" href="#_2-grundlagen"><span>2 Grundlagen</span></a></h2><h3 id="von-neumann-architektur" tabindex="-1"><a class="header-anchor" href="#von-neumann-architektur"><span>Von Neumann Architektur</span></a></h3><ul><li>generischer Computer</li><li>alles in einem Speicher (Daten, Programme), in homogenen Zellen, die linear adressiert werden</li><li>Kontrollfluss <ul><li>Load Instruction</li><li>Store Instruction to Control Register</li><li>Decode Instruction</li><li>Execute Instruction</li></ul></li><li>Operationen <ul><li>Arithmetic and Logical</li><li>Transport</li><li>Control Flow</li><li>Input / Output</li></ul></li></ul><h3 id="harvard-architektur" tabindex="-1"><a class="header-anchor" href="#harvard-architektur"><span>Harvard Architektur</span></a></h3><ul><li>Trennt Daten- und Instruktionenspeicher</li><li>wird heute modifiziert verwendet (getrennte Cache-Level)</li></ul><h3 id="instruction-set-architecture-isa" tabindex="-1"><a class="header-anchor" href="#instruction-set-architecture-isa"><span>Instruction Set Architecture (ISA)</span></a></h3><ul><li>Operationen der CPU als “Vertrag”</li><li>Definiert Instruktionen (und deren binäre Codierung), Register, Zustände, Speicherzugriff und die Schnittstelle zur Außenwelt</li><li>Oftmals mit vielen optionalen Erweiterungen</li></ul><h3 id="microarchitecture-blackbox" tabindex="-1"><a class="header-anchor" href="#microarchitecture-blackbox"><span>Microarchitecture (Blackbox)</span></a></h3><ul><li>eigentliche Implementierung der ISA (muss diese einhalten)</li><li>hochgradig optimiert</li></ul><h3 id="register" tabindex="-1"><a class="header-anchor" href="#register"><span>Register</span></a></h3><ul><li>schnellstes Speicherelement der CPU</li><li><strong>General Purpose Register (GPR)</strong>: Zwischenergebnisse der Execution</li><li><strong>Special Purpose Registers (SPR) / Control and Status Register (CSR)</strong><ul><li>Program Counter (PC)</li><li>Stack Pointer</li><li>Status Registers (flags)</li><li>Link Register</li><li>Index Register (Adressberechnungen)</li></ul></li></ul><h3 id="instruktionen" tabindex="-1"><a class="header-anchor" href="#instruktionen"><span>Instruktionen</span></a></h3><ul><li>Interpretation basiert auf ISA</li><li>Sequenzielle Ausführung</li><li>Integer Computational Instructions / Memory Access / Control Flow / Input/Output</li></ul><h3 id="speicherzugriff" tabindex="-1"><a class="header-anchor" href="#speicherzugriff"><span>Speicherzugriff</span></a></h3><ul><li>Transport zwischen Speicher und Registern, da Register limitiert</li><li>Unterschied zwischen Hauptspeicher und Langzeit-Speicher (disk)</li></ul><h3 id="_5-phasen-der-ausfuhrung" tabindex="-1"><a class="header-anchor" href="#_5-phasen-der-ausfuhrung"><span>5 Phasen der Ausführung</span></a></h3><ul><li><strong>Fetch</strong> (FE)</li><li><strong>Decode</strong> (DE)</li><li><strong>Execute</strong> (EX)</li><li><strong>Memory Access</strong> (MA)</li><li><strong>Write Back</strong> (WB)</li></ul><h2 id="_3-risc-v-grundlagen-und-arithmetik" tabindex="-1"><a class="header-anchor" href="#_3-risc-v-grundlagen-und-arithmetik"><span>3 RISC-V Grundlagen und Arithmetik</span></a></h2><h3 id="risc-v" tabindex="-1"><a class="header-anchor" href="#risc-v"><span>RISC-V</span></a></h3><ul><li>2010: akademisches Projekt der UC Berkeley</li><li>Offene Befehlssatzarchitektur</li><li>rapide Adaption in der Industrie</li><li>klar und gut strukturiert, erweiterbar</li><li>Open Source und proprietäre Prozessor-Implementierungen</li><li><strong>Reduced Instruction Set Computer (RISC)</strong>: max. 2 Operanden und 1 Ergebnis, geringe funktionale Komplexität, Speicherzugriff nur bei Load und Store</li></ul><h3 id="risc-v-register" tabindex="-1"><a class="header-anchor" href="#risc-v-register"><span>RISC-V Register</span></a></h3><ul><li>32 General Purpose Register (x0 .. x31), x0 ist 0 (read only)</li><li>mit 32, 64 oder 128 Bit möglich</li><li>Bis zu 4096 Control and Status Register</li></ul><p>Einfache arithmetische Instruktionen:</p><ul><li>add rd, rs1, rs2 (rd = rs1 + rs2)</li><li>sub rd, rs1, rs2 (rd = rs1 - rs2)</li></ul><p>Ein Übertrag ist aufgetreten, wenn nach a = b + c (vorzeichenlos) gilt: a &lt; c</p><p>Ein Überlauf ist aufgetreten, wenn nach a = b + c (vorzeichenbehaftet) gilt: a hat das umgekehrte Vorzeichen</p><p>Wenn bei Addition überlauf: Carry Status-Bit als Übertrag gesetzt (nicht im Ergebnis sichtbar) Vergleiche</p>',35)),e("ul",null,[t[4]||(t[4]=e("li",null,"weder Condition Codes (Zero Flag, Carry Flag, ...) noch Predications (Operation wenn Flag gesetzt)",-1)),e("li",null,[t[2]||(t[2]=n("slt rd, rs1, rs2 (")),e("mjx-container",o,[(r(),a("svg",Q,t[0]||(t[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(451,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(1248.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2304.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2693.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3144.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(3613.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4391.3,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(5447.1,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(5898.1,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mn" transform="translate(6367.1,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6867.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mtext" transform="translate(7256.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(7506.1,0)"><path data-c="3F" d="M226 668Q190 668 162 656T124 632L114 621Q116 621 119 620T130 616T145 607T157 591T162 567Q162 544 147 529T109 514T71 528T55 566Q55 625 100 661T199 704Q201 704 210 704T224 705H228Q281 705 320 692T378 656T407 612T416 567Q416 503 361 462Q267 395 247 303Q242 279 242 241V224Q242 205 239 202T222 198T205 201T202 218V249Q204 320 220 371T255 445T292 491T315 537Q317 546 317 574V587Q317 604 315 615T304 640T277 661T226 668ZM162 61Q162 89 180 105T224 121Q247 119 264 104T281 61Q281 31 264 16T222 1Q197 1 180 16T162 61Z"></path></g><g data-mml-node="mtext" transform="translate(7978.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(8228.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mtext" transform="translate(8728.1,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mo" transform="translate(9255.9,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mtext" transform="translate(9811.7,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(10061.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g>',1)]))),t[1]||(t[1]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"r"),e("mi",null,"d"),e("mo",null,"="),e("mo",{stretchy:"false"},"("),e("mi",null,"r"),e("mi",null,"s"),e("mn",null,"1"),e("mo",null,"<"),e("mi",null,"r"),e("mi",null,"s"),e("mn",null,"2"),e("mo",{stretchy:"false"},")"),e("mtext",null," "),e("mo",null,"?"),e("mtext",null," "),e("mn",null,"1"),e("mtext",null," "),e("mo",null,":"),e("mtext",null," "),e("mn",null,"0")])],-1))]),t[3]||(t[3]=n(")"))]),t[5]||(t[5]=e("li",null,"sltu rd, rs1, rs2 (unsigned)",-1)),t[6]||(t[6]=e("li",null,"sgt rd, rs1, rs2 (greater than)",-1))]),t[101]||(t[101]=e("p",null,"Bedingte Sprünge",-1)),t[102]||(t[102]=e("ul",null,[e("li",null,"beq rs1, rs2, imm"),e("li",null,"bge rs1, rs2, imm"),e("li",null,"blt rs1, rs2, imm")],-1)),t[103]||(t[103]=e("h2",{id:"_4-abstraktion-und-hardware-implementierung",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_4-abstraktion-und-hardware-implementierung"},[e("span",null,"4 Abstraktion und Hardware-Implementierung")])],-1)),t[104]||(t[104]=e("p",null,[e("strong",null,"Code Size"),n(" als wichtiges Optimierungs-Ziel, v.a. bei Embedded")],-1)),e("ul",null,[t[11]||(t[11]=e("li",null,"weniger Instruktionen im Programm",-1)),t[12]||(t[12]=e("li",null,"kürzere Instruktionen (z.B. compressed mode mit 16 Bit)",-1)),e("li",null,[t[9]||(t[9]=n("höhere Instruktionsdichte ")),e("mjx-container",d,[(r(),a("svg",T,t[7]||(t[7]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[8]||(t[8]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[10]||(t[10]=n(" weniger Instruktionen notwendig"))])]),t[105]||(t[105]=l('<h3 id="_4-1-risc-v-instruction-coding" tabindex="-1"><a class="header-anchor" href="#_4-1-risc-v-instruction-coding"><span>4.1 RISC-V Instruction Coding</span></a></h3><ul><li>bestimmte Felder immer an derselben Stelle → weniger Hardware Overhead</li><li>verschieden Formate für verschiedene Typen von Befehlen (register-register, registerimmediate, ...)</li></ul><h3 id="_4-2-von-der-hochsprache-zum-maschinencode" tabindex="-1"><a class="header-anchor" href="#_4-2-von-der-hochsprache-zum-maschinencode"><span>4.2 Von der Hochsprache zum Maschinencode</span></a></h3><ul><li><strong>Assembler-Sprache</strong> als Abstraktion (symbolische Sprache, die Maschinenbefehle beschreibt)</li><li><strong>Assembler-Programm</strong> übersetzt Assembler-Sprache in Maschinenbefehle</li><li>da Assembler-Programmierung aufwändig, Abstraktion durch <strong>Hochsprache</strong>: Übersetzung in Assembler-Befehle durch Compiler</li></ul><h2 id="_5-cpu-pipelining-und-kontrollfluss" tabindex="-1"><a class="header-anchor" href="#_5-cpu-pipelining-und-kontrollfluss"><span>5 CPU-Pipelining und Kontrollfluss</span></a></h2>',5)),e("p",null,[t[15]||(t[15]=e("strong",null,"Problem",-1)),t[16]||(t[16]=n(": serielle Ausführung dauert viel zu lange ")),e("mjx-container",m,[(r(),a("svg",h,t[13]||(t[13]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[14]||(t[14]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[17]||(t[17]=n(" Parallelisierung durch ")),t[18]||(t[18]=e("strong",null,"Instruction Pipelining",-1))]),e("p",null,[t[29]||(t[29]=n("Bei ")),e("mjx-container",g,[(r(),a("svg",u,t[19]||(t[19]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1933.6,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g>',1)]))),t[20]||(t[20]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"n"),e("mo",null,"="),e("mn",null,"4")])],-1))]),t[30]||(t[30]=n(" Befehlen und ")),e("mjx-container",p,[(r(),a("svg",c,t[21]||(t[21]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(780.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1836.6,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g>',1)]))),t[22]||(t[22]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"p"),e("mo",null,"="),e("mn",null,"4")])],-1))]),t[31]||(t[31]=n(" Pipelineschritten, bräuchte seriell ")),e("mjx-container",f,[(r(),a("svg",w,t[23]||(t[23]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1544.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(2325.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3381,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g></g></g>',1)]))),t[24]||(t[24]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"n"),e("mo",null,"∗"),e("mi",null,"p"),e("mo",null,"="),e("mn",null,"16")])],-1))]),t[32]||(t[32]=n(" Zyklen, mit Pipelining ")),e("mjx-container",H,[(r(),a("svg",b,t[25]||(t[25]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(1822.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2211.4,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(2936.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3936.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4436.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5103.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(6159.4,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g></g>',1)]))),t[26]||(t[26]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"n"),e("mo",null,"+"),e("mo",{stretchy:"false"},"("),e("mi",null,"p"),e("mo",null,"−"),e("mn",null,"1"),e("mo",{stretchy:"false"},")"),e("mo",null,"="),e("mn",null,"7")])],-1))]),t[33]||(t[33]=n(" Zyklen. Der Speedup beträgt damit ")),e("mjx-container",x,[(r(),a("svg",k,t[27]||(t[27]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1000,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(1500,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g></g>',1)]))),t[28]||(t[28]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mn",null,"16"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",null,"/")]),e("mn",null,"7")])],-1))]),t[34]||(t[34]=n("."))]),t[106]||(t[106]=e("p",null,"In der Hardware werden dafür zusätzliche Zwischenregister benötigt, die die Zwischenergebnisse halten, bis diese in den nächsten Schritt gelangen. Außerdem zusätzliche Taktsignale.",-1)),t[107]||(t[107]=e("h3",{id:"_5-1-data-hazard",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-1-data-hazard"},[e("span",null,"5.1 Data Hazard")])],-1)),e("ul",null,[t[46]||(t[46]=e("li",null,"wenn Daten einer vorherigen Instruktion noch nicht zurückgeschrieben wurden (RAW = Read after Write)",-1)),t[47]||(t[47]=e("li",null,[n("bewirkt Pipeline Stall: warten, bis Hazard behoben, alternativ: "),e("ul",null,[e("li",null,[e("strong",null,"Umsortieren"),n(" der Anweisungen: wird vom Compiler gemacht")]),e("li",null,[e("strong",null,"Forwarding"),n(": Daten direkt von Execute oder Memory Access abgreifen")])])],-1)),e("li",null,[t[41]||(t[41]=n("Auswirkung auf ")),t[42]||(t[42]=e("strong",null,"CPI/IPC",-1)),t[43]||(t[43]=n(": bei Hazard Rate ")),e("mjx-container",v,[(r(),a("svg",M,t[35]||(t[35]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(728.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1784.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2284.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(2784.6,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g>',1)]))),t[36]||(t[36]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"r"),e("mo",null,"="),e("mn",null,"1"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",null,"/")]),e("mn",null,"4")])],-1))]),t[44]||(t[44]=n(" und Penalty ")),e("mjx-container",L,[(r(),a("svg",V,t[37]||(t[37]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(780.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1836.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g>',1)]))),t[38]||(t[38]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"p"),e("mo",null,"="),e("mn",null,"2")])],-1))]),t[45]||(t[45]=n(": ")),e("mjx-container",Z,[(r(),a("svg",S,t[39]||(t[39]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(1511,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mo" transform="translate(2292.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3348.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4070.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(5071,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5571,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(6071,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g><g data-mml-node="mo" transform="translate(6793.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(7515.4,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(8293.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(9349,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z" transform="translate(778,0)"></path></g></g></g>',1)]))),t[40]||(t[40]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"C"),e("mi",null,"P"),e("mi",null,"I"),e("mo",null,"="),e("mn",null,"1"),e("mo",null,"+"),e("mn",null,"1"),e("mrow",{"data-mjx-texclass":"ORD"},[e("mo",null,"/")]),e("mn",null,"4"),e("mo",null,"∗"),e("mn",null,"2"),e("mo",null,"="),e("mn",null,"1.5")])],-1))])]),t[48]||(t[48]=e("li",null,"kann für Load Instructions nicht behoben werden, da Ergebnis erst nach MA verfügbar, lediglich Umsortierung durch Compiler möglich",-1))]),t[108]||(t[108]=e("h3",{id:"_5-2-control-hazard",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_5-2-control-hazard"},[e("span",null,"5.2 Control Hazard")])],-1)),e("ul",null,[t[73]||(t[73]=e("li",null,"bei Branches ist erst nach Execute klar, welcher Zweig genommen wird",-1)),e("li",null,[t[55]||(t[55]=n("bei Branch Rate ")),e("mjx-container",y,[(r(),a("svg",C,t[49]||(t[49]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D44F",d:"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"})])])],-1)]))),t[50]||(t[50]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"b")])],-1))]),t[56]||(t[56]=n(" und Penalty ")),e("mjx-container",B,[(r(),a("svg",z,t[51]||(t[51]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"})])])],-1)]))),t[52]||(t[52]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"p")])],-1))]),t[57]||(t[57]=n(" beträgt ")),e("mjx-container",A,[(r(),a("svg",R,t[53]||(t[53]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mi" transform="translate(504,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(1255,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2292.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3348.6,0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1001.4,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(1278,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1707,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(2207,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><rect width="2116.3" height="60" x="120" y="220"></rect></g></g></g></g>',1)]))),t[54]||(t[54]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"I"),e("mi",null,"P"),e("mi",null,"C"),e("mo",null,"="),e("mrow",{"data-mjx-texclass":"ORD"},[e("mfrac",null,[e("mn",null,"1"),e("mrow",null,[e("mn",null,"1"),e("mo",null,"+"),e("mi",null,"b"),e("mo",null,"∗"),e("mi",null,"p")])])])])],-1))])]),t[74]||(t[74]=e("li",null,[n("wo möglich "),e("strong",null,"Branches vermeiden"),e("ul",null,[e("li",null,[e("strong",null,"Bedingte Instruktionen"),n(" (nicht in RISC-V), z.B. cmp in ARM")]),e("li",null,[e("strong",null,"Loop Unrolling"),n(": Erhöhte Code Size, aber bessere Performance (wird vom Compiler gemacht)")])])],-1)),e("li",null,[t[70]||(t[70]=n("ansonsten ")),t[71]||(t[71]=e("strong",null,"Branch Prediction",-1)),t[72]||(t[72]=n(" (statisch oder dynamisch) ")),e("ul",null,[e("li",null,[t[66]||(t[66]=n("Bei Branch Rate ")),e("mjx-container",D,[(r(),a("svg",P,t[58]||(t[58]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D44F",d:"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"})])])],-1)]))),t[59]||(t[59]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"b")])],-1))]),t[67]||(t[67]=n(", Penalty ")),e("mjx-container",I,[(r(),a("svg",j,t[60]||(t[60]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"})])])],-1)]))),t[61]||(t[61]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"p")])],-1))]),t[68]||(t[68]=n(" und Misprediction Rate ")),e("mjx-container",E,[(r(),a("svg",O,t[62]||(t[62]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mi"},[e("path",{"data-c":"1D45A",d:"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"})])])],-1)]))),t[63]||(t[63]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"m")])],-1))]),t[69]||(t[69]=n(" beträgt ")),e("mjx-container",F,[(r(),a("svg",U,t[64]||(t[64]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mi" transform="translate(504,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(1255,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mo" transform="translate(2292.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(3348.6,0)"><g data-mml-node="mfrac"><g data-mml-node="mn" transform="translate(1488.5,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mrow" transform="translate(220,-345) scale(0.707)"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(1278,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(1707,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(2207,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3085,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(3585,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g><rect width="3090.7" height="60" x="120" y="220"></rect></g></g></g></g>',1)]))),t[65]||(t[65]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mi",null,"I"),e("mi",null,"P"),e("mi",null,"C"),e("mo",null,"="),e("mrow",{"data-mjx-texclass":"ORD"},[e("mfrac",null,[e("mn",null,"1"),e("mrow",null,[e("mn",null,"1"),e("mo",null,"+"),e("mi",null,"b"),e("mo",null,"∗"),e("mi",null,"m"),e("mo",null,"∗"),e("mi",null,"p")])])])])],-1))])])])])]),t[109]||(t[109]=l('<h2 id="_6-statische-branch-prediction" tabindex="-1"><a class="header-anchor" href="#_6-statische-branch-prediction"><span>6 Statische Branch Prediction</span></a></h2><p>Heute ausschließlich &quot;Machine decision&quot; und nicht mehr &quot;User-controlled&quot; (Bit im Opcode), da Coding Space zu wertvoll und keine besseren Ergebnisse dadurch.</p><h3 id="_6-1-always" tabindex="-1"><a class="header-anchor" href="#_6-1-always"><span>6.1 Always</span></a></h3><p>Wahrscheinlichkeit, dass ein Branch genommen wird bei <strong>60-70%</strong>, also einfach immer davon ausgehen. Dafür dann aber Penalty in <strong>30-40%</strong> der Fälle.</p><h3 id="_6-2-backward-taken-forward-not-taken-btfnt" tabindex="-1"><a class="header-anchor" href="#_6-2-backward-taken-forward-not-taken-btfnt"><span>6.2 Backward Taken, Forward Not Taken (BTFNT)</span></a></h3><p>Wahrscheinlichkeiten von <strong>90%/23%</strong>, dass ein backward/forward Branch genommen wird, also nur bei rückwärts Branches davon ausgehen. Auch hier noch eine gewisse Penalty übrig.</p><h2 id="_7-dynamische-branch-prediction" tabindex="-1"><a class="header-anchor" href="#_7-dynamische-branch-prediction"><span>7 Dynamische Branch Prediction</span></a></h2><p>Basiert auf Historie, funktioniert wegen:</p><ul><li><strong>Temporal Correlation</strong>: wiederholt gleiche Entscheidung (Loops)</li><li><strong>Spatial Correlation</strong>: Branches auf einem Pfad verhalten sich vermutlich bei jeder Ausführung ähnlich</li></ul><h3 id="_7-1-1-bit-pradiktor" tabindex="-1"><a class="header-anchor" href="#_7-1-1-bit-pradiktor"><span>7.1 1-Bit Prädiktor</span></a></h3>',10)),e("ul",null,[t[81]||(t[81]=e("li",null,[e("strong",null,"2 Zustände"),n(" 0 und 1, Penalty bei Zustandswechsel")],-1)),e("li",null,[t[80]||(t[80]=n("Bei mehreren Branches würde der selbe Prädiktor verwendet, daher werden mehrere 1-Bit Prädiktoren parallel eingesetzt ")),e("ul",null,[t[79]||(t[79]=e("li",null,"Teil des PC bestimmt Prädiktor",-1)),e("li",null,[t[77]||(t[77]=n("Signifikante Bits ändern sich nicht schnell genug (aliasing) und letzte 2 Bits immer 0 ")),e("mjx-container",G,[(r(),a("svg",W,t[75]||(t[75]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[76]||(t[76]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[78]||(t[78]=n(" die weniger signifikanten Bits, aber nicht die statischen"))])])]),t[82]||(t[82]=e("li",null,"Performt bereits besser als die statische Vorhersage, erkennt aber keine Muster (z.B. Inner loops)",-1))]),t[110]||(t[110]=e("h3",{id:"_7-2-2-bit-pradiktor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-2-2-bit-pradiktor"},[e("span",null,"7.2 2-Bit Prädiktor")])],-1)),t[111]||(t[111]=e("ul",null,[e("li",null,[e("strong",null,"4 Zustände"),n(", wobei das erste Bit der Vorhersage entspricht")]),e("li",null,"Prädiktor muss zweimal falsch liegen, um seine Vorhersage zu ändern, dadurch werden Ausreißer kompensiert")],-1)),t[112]||(t[112]=e("h3",{id:"_7-3-2-way-adaptive-predictor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-3-2-way-adaptive-predictor"},[e("span",null,"7.3 2-Way Adaptive Predictor")])],-1)),e("p",null,[t[85]||(t[85]=n("Auswahl des 2-Bit Prädiktors basierend auf ")),t[86]||(t[86]=e("strong",null,"Historie",-1)),t[87]||(t[87]=n(" letzter Branch Entscheidungen, z.B. letzte 5 Entscheidungen ")),e("mjx-container",J,[(r(),a("svg",N,t[83]||(t[83]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[84]||(t[84]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[88]||(t[88]=n(" 32 Prädiktoren"))]),t[113]||(t[113]=e("h4",{id:"_7-3-1-2-way-adaptive-global-predictor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-3-1-2-way-adaptive-global-predictor"},[e("span",null,"7.3.1 2-Way Adaptive Global Predictor")])],-1)),e("p",null,[t[91]||(t[91]=n("Hier fließt ")),t[92]||(t[92]=e("strong",null,"auch ein Teil des PC",-1)),t[93]||(t[93]=n(" in die Prädiktor-Auswahl mit ein, z.B. 2 Bit aus PC + 3 Bit Historie ")),e("mjx-container",K,[(r(),a("svg",X,t[89]||(t[89]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[90]||(t[90]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[94]||(t[94]=n(" 32 Prädiktoren"))]),t[114]||(t[114]=e("h4",{id:"_7-3-2-2-way-adaptive-local-predictor",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_7-3-2-2-way-adaptive-local-predictor"},[e("span",null,"7.3.2 2-Way Adaptive Local Predictor")])],-1)),t[115]||(t[115]=e("p",null,[n("Hier wird ein "),e("strong",null,"Teil des PC"),n(" für die Auswahl der Historie verwendet.")],-1)),e("p",null,[t[97]||(t[97]=e("strong",null,"Historie und ein Teil des PC",-1)),t[98]||(t[98]=n(" bestimmen dann den Prädiktor, z.B. 4 Bit des PC bestimmen 4 Bit Historie, mit 2 Bit des PC ")),e("mjx-container",q,[(r(),a("svg",Y,t[95]||(t[95]=[e("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[e("g",{"data-mml-node":"math"},[e("g",{"data-mml-node":"mo"},[e("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),t[96]||(t[96]=e("mjx-assistive-mml",{unselectable:"on",display:"inline"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("mo",{stretchy:"false"},"→")])],-1))]),t[99]||(t[99]=n(" 64 Prädiktoren"))]),t[116]||(t[116]=l('<h3 id="_7-4-branch-target-prediction" tabindex="-1"><a class="header-anchor" href="#_7-4-branch-target-prediction"><span>7.4 Branch Target Prediction</span></a></h3><p>Bei unbedingten Sprüngen kann die Zieladresse dynamisch sein. In diesem Fall wäre sie erst bei Execute bekannt (Jump and Link Register (jalr)). Dafür wird das <strong>Branch Target Buffer (BTB)</strong> eingeführt</p><ul><li>speichert letzte Zieladresse zu bestimmtem PC</li><li>ist aber teure Hardware (limitierte Einträge)</li></ul><p>Zusätzlich <strong>Return Address Stack (RAS)</strong></p><ul><li>die Return Adresse wird bei function calls auf einen separaten Stack gelegt</li><li>damit immer Rücksprungadresse parat</li></ul><h2 id="_8-komplexes-pipelining" tabindex="-1"><a class="header-anchor" href="#_8-komplexes-pipelining"><span>8 Komplexes Pipelining</span></a></h2><p>Noch bessere Performance durch Superskalarität (vertikale Skalierung) und <strong>Out-of-Order-Exceution</strong>.</p><h3 id="_8-1-functional-units" tabindex="-1"><a class="header-anchor" href="#_8-1-functional-units"><span>8.1 Functional Units</span></a></h3><ul><li>Statt Execute verschiedene <strong>Functional Units (FU)</strong>: ALU, MUL, DIV, FPU</li><li>manche Operationen benötigen mehrere Zyklen, z.B. Multiplikation über 3 Zyklen</li><li>oft auch Parallelisierung in einer FU möglich</li><li>Metriken: <ul><li><strong>Latency</strong>: Zyklen, welche die FU für eine Instruktion benötigt</li><li><strong>Initiation Interval</strong>: Zyklen zwischen zwei Instruktionen</li></ul></li><li><strong>Structural Hazard</strong> wenn benötigte FU nicht verfügbar</li></ul><h3 id="_8-2-memory-access" tabindex="-1"><a class="header-anchor" href="#_8-2-memory-access"><span>8.2 Memory Access</span></a></h3><ul><li>nur bei rund 20% der Instruktionen</li><li>kann daher weggelassen werden, bzw. ist optional nach ALU, wobei die ALU die Adressberechnung vornimmt</li><li>oftmals eigene <strong>Load-Store Unit (LSU)</strong>, die eine ALU und den Memory Access umfasst</li></ul><h3 id="_8-3-load-and-store-optimierungen" tabindex="-1"><a class="header-anchor" href="#_8-3-load-and-store-optimierungen"><span>8.3 Load-and-Store Optimierungen</span></a></h3><ul><li><strong>Nonblocking loads</strong>: Überlappung von Memory Acess Phasen, paralleles Laden</li><li><strong>Store Buffer</strong>: Posted stores: Speicherung wird in Auftrag gegeben (in Puffer geschrieben), dann wird weitergemacht; Soeicherung erfolgt unabhängig von Pipeline</li></ul><h2 id="_9-out-of-order-execution" tabindex="-1"><a class="header-anchor" href="#_9-out-of-order-execution"><span>9 Out-of-Order Execution</span></a></h2><p>Verschiedene Arten des Scheduling</p><ul><li>Static: Ausführung vorbestimmt</li><li>Dynamic: Auswahl der nächsten Instruktion zur Laufzeit <ul><li>In-Order Execution (sequenziell)</li><li><strong>Out-of-Order-Execution</strong> (sobald möglich)</li></ul></li><li>durch Data Hazards limitiert, zusätzlich zu In-Order (Read-after-Write): <ul><li><strong>Write-after-Read</strong></li><li><strong>Write-after-Write</strong></li><li>kann in einem Datenfluss-Graphen visualisiert werden</li></ul></li></ul><p>Dynamisches Scheduling</p><ul><li>unter Beachtung der Hazards <ul><li>Structural: FU muss frei sein</li><li>Data: Abhängigkeiten müssen aufgelöst sein (richtige Reihenfolge)</li></ul></li><li>werden Instruktionen so früh wie möglich begonnen</li><li>Speicherung im Instruction Buffer</li></ul><p>Unterteilung der Decode-Phase</p><ul><li><strong>Issue</strong>: Dekodierung und Beachtung von Structural Hazards bzw. voller Instruction Buffer</li><li><strong>Read Operands</strong>: Operanden werden erst gelesen, wenn alle Data Hazards behoben wurden</li></ul><p>Verwendung eines <strong>Scoreboard</strong></p><ul><li>welche Instruktion in welcher FU aktiv ist</li><li>ob es einen Konflikt bei der aktuellen Instruktion gibt</li><li>Instruktionen werden bei Start eingetragen und nach dem Write Back wieder ausgetragen</li></ul><p>Limits von <strong>Out-of-Order</strong>:</p><ul><li>durch limitierte Register treten viele WAW und WAR Hazards auf, vor allem bei mehreren Ausführungspfaden <ul><li>Behebung durch <strong>Register Renaming</strong>: virtuelle Registernamen (nach außen nicht sichtbar)</li></ul></li></ul><h2 id="_10-speicher" tabindex="-1"><a class="header-anchor" href="#_10-speicher"><span>10 Speicher</span></a></h2><p>Ziele</p><ul><li>kostengünstig</li><li>ausreichend groß</li><li>mit guter Performance (Entwicklung schleppend im Vergleich zu Prozessoren)</li></ul><p>Lokalität</p><ul><li><strong>Räumlich</strong>: nahe Adressen zu ähnlichen Zeitpunkten</li><li><strong>Zeitlich</strong>: nach kürzlichem Zugriff wahrscheinlich wieder in naher Zukunft</li><li>Optimierung durch Speicherhierarchien</li></ul><p>Preis/Performance</p><ul><li>Register &gt; Cache &gt; Hauptspeicher &gt; Hintergrundspeicher</li></ul><p>Klassen</p><ul><li><strong>volatil: Random Access Memory (RAM)</strong><ul><li>beliebig oft und schnell beschreibbar</li><li>verliert Daten bei Spannungswegfall</li></ul></li><li><strong>nicht-volatil: Read-Only Memory (ROM)</strong><ul><li>aufwändig oder überhaupt nicht wiederbeschreibbar</li></ul></li></ul><h3 id="_10-1-nicht-volatile-speicher" tabindex="-1"><a class="header-anchor" href="#_10-1-nicht-volatile-speicher"><span>10.1 Nicht-volatile Speicher</span></a></h3><ul><li>Speicherelement: Durchbrennmetallisierung oder -Diode</li><li>nicht wiederbeschreibbar <ul><li><strong>Maskenprogrammierbares ROM (MROM)</strong>: vom Hersteller programmiert, ab ca. 1000 Stück rentabel</li><li><strong>Programmierbares ROM (PROM)</strong>: vom Anwender mit Programmiergerät programmierbar <ul><li><strong>Erasable PROM (EPROM)</strong>: durch UV-Licht löschbar</li><li><strong>Electrically Erasable PROM (EEPROM)</strong>: elektrisch löschbar (max. ca. 106 mal) &amp; byteweise beschreibbar</li><li><strong>Flash-EEPROM</strong>: blockweiser Zugriff, jeder Block 105 mal beschreibbar, in Mobilgeräten und SSDs</li></ul></li></ul></li></ul><h3 id="_10-2-volatile-speicher" tabindex="-1"><a class="header-anchor" href="#_10-2-volatile-speicher"><span>10.2 Volatile Speicher</span></a></h3><p>Kernspeicher (Core)</p><ul><li>1970 am verbreitetsten, heute historisch</li><li>Ferritkernring als Speicherelement</li></ul><p>Unterscheidung des RAM</p><ul><li><strong>Static (SRAM)</strong><ul><li>schnell, groß &amp; teuer</li><li>Flip Flop Speicher (6 Transistoren)</li><li>für Caches, Datenspeicher mit Pufferbatterie (BIOS), ICs/FPGAs (lokaler Speicher)</li></ul></li><li><strong>Dynamic (DRAM)</strong><ul><li>langsam, aber klein und billig</li><li>Kondensator Speicher (Transistor + Kondensator, refresh nötig)</li><li>für Hauptspeicher</li></ul></li></ul><p>Dynamischer Speicher (DRAM)</p><ul><li>Synchronous DRAM Dual Inline Memory Module (<strong>SDRAM DIMM-Speichermodul</strong>) <ul><li>synchron bedeutet getaktet (durch Systembus, ggf. durch separaten Speicherbus)</li><li>abgelöst durch DDR-SDRAM (Ausnutzung beider Taktflanken → Verdopplung der Datenrate)</li></ul></li><li><strong>Speicherzelle</strong><ul><li>Speicher über kleine Kondensatorkapazität, entspricht 1 Bit</li><li>Adressierung über <strong>Zeilenleitung</strong>, Output über <strong>Spaltenleitung</strong>, Lesen löscht den gespeicherten Wert</li><li>Refresh notwendig aufgrund Selbstentladung</li><li>können dicht gepackt werden (Trench Zellen: Einätzung von Kondensatoren in das Wafermaterial)</li></ul></li><li>Anordnung der Zellen in einem <strong>Speicherfeld</strong></li><li>Mehrere Speicherfelder hintereinander sind eine <strong>Bank</strong>, Felder werden gleichzeitig gelesen, z.B. 8 Felder für byteweises Lesen</li><li>Mehrere Bänke bilden einen <strong>Chip</strong>, zusätzliche Bits für Adressierung notwendig</li><li>Mehrere Chips bilden ein <strong>Modul</strong>, hier wird wieder parallel gelesen, sodass 32 oder 64 Bit auf einmal gelesen werden können</li><li>Zugriffe: <ul><li><strong>Lesen</strong>: Komplette Zeile in Leseverstärker (da Ladungen der ganzen Zeile verloren gehen), Anlegen der Spaltenadresse &amp; Auslesen, Zurückschreiben der ganzen Zeile (spart Anschlussleitungen, da Adressen über eine Leitung)</li><li><strong>Schreiben</strong>: wie Lesen, aber Veränderung des entsprechenden Bits vor dem Zurückschreiben</li></ul></li></ul><h2 id="_11-cache" tabindex="-1"><a class="header-anchor" href="#_11-cache"><span>11 Cache</span></a></h2><p>Weiterer Teil der Speicherhierarchie: Register sind sehr teuer und Hauptspeicher dauert zu lange</p><ul><li>prüfen, ob schon im Cache (<strong>Cache Hit</strong>)</li><li>ansonsten aus nächst langsamerer Ebene anfordern (anderes Cache-Level oder Hauptspeicher) (<strong>Cache Miss</strong>)</li></ul><p>speichert nur einen Teil des Hauptspeichers (KB bis MB)</p><ul><li><strong>Block Placement</strong>: wo ein Block abgelegt wird</li><li><strong>Block Identification</strong>: wie ein Block gefunden wird</li><li><strong>Block Replacement</strong>: welcher Block bei einem Cache Miss ersetzt wird</li><li><strong>Schreibstrategie</strong>: wie ein Schreibvorgang abläuft</li></ul><p>Organisation in Blöcken bzw. <strong>Cache Lines</strong></p><ul><li>Mehrere Worte pro Cache Line</li></ul><p>Adressierung über Tag + Offset + Byte-Offset (Innerhalb des Worts)</p><h3 id="_11-1-voll-assoziativer-speicher" tabindex="-1"><a class="header-anchor" href="#_11-1-voll-assoziativer-speicher"><span>11.1 Voll Assoziativer Speicher</span></a></h3><p>Ist teuer, da <strong>viele Komparatoren erforderlich</strong> sind. Block kann überall im Cache liegen.</p><h3 id="_11-2-direct-mapped-cache" tabindex="-1"><a class="header-anchor" href="#_11-2-direct-mapped-cache"><span>11.2 Direct-Mapped Cache</span></a></h3><p>Teil der Adresse ist <strong>Index</strong>, der auf genau eine Stelle im Cache zeigt (Tag wird dadurch kleiner).</p><h3 id="_11-3-n-wege-assoziativer-cache" tabindex="-1"><a class="header-anchor" href="#_11-3-n-wege-assoziativer-cache"><span>11.3 n-Wege Assoziativer Cache</span></a></h3><p>Aufteilung in Sets: Einschränkung des Suchraums, Indizierung der Sets</p><h3 id="_11-4-verdrangungsstrategien" tabindex="-1"><a class="header-anchor" href="#_11-4-verdrangungsstrategien"><span>11.4 Verdrängungsstrategien</span></a></h3><ul><li>bei Direct-Mapped kommt nur ein Block in Frage</li><li>für assoziative Speicher: <ul><li><strong>Random</strong>: Zufall</li><li><strong>FIFO</strong>: ältester Block (einfach zu implementieren, aber nicht optimal)</li><li><strong>Least Recently Used (LRU)</strong>: am längsten nicht genutzter Block (Aufzeichnung der Zugriffe)</li></ul></li><li>da LRU in Hardware sehr aufwändig ist, kann stattdessen durch <strong>Pseudo-LRU</strong> angenähert werden. <ul><li><strong>Baum aus Status-Bits</strong> (links/rechts), Blätter sind die Blöcke</li><li>nach Zugriff Umkehr aller Bits auf dem Pfad</li></ul></li></ul>',58))])}const n1=i(s,[["render",$],["__file","Rechnerarchitektur.html.vue"]]),a1=JSON.parse('{"path":"/posts/SoSe2024/Rechnerarchitektur.html","title":"Rechnerarchitektur","lang":"en-US","frontmatter":{"date":"2024-07-21T00:00:00.000Z","author":"Linus Englert","timeline":false,"article":false,"description":"Rechnerarchitektur 1 Übersicht Computerentwicklung um 1700: Leibniz Rechenmaschine 1941: Zuse Z3 (Deutschland) Hardware Schaltung (Relais) 1947: ENIAC (USA) Elektrische Schaltun...","head":[["meta",{"property":"og:url","content":"https://chabbay.github.io/ChabbaYsZusammenfassungen-Blog/posts/SoSe2024/Rechnerarchitektur.html"}],["meta",{"property":"og:site_name","content":"Zusammenfassungen"}],["meta",{"property":"og:title","content":"Rechnerarchitektur"}],["meta",{"property":"og:description","content":"Rechnerarchitektur 1 Übersicht Computerentwicklung um 1700: Leibniz Rechenmaschine 1941: Zuse Z3 (Deutschland) Hardware Schaltung (Relais) 1947: ENIAC (USA) Elektrische Schaltun..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-13T20:35:40.000Z"}],["meta",{"property":"article:author","content":"Linus Englert"}],["meta",{"property":"article:published_time","content":"2024-07-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-13T20:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Rechnerarchitektur\\",\\"description\\":\\"Rechnerarchitektur 1 Übersicht Computerentwicklung um 1700: Leibniz Rechenmaschine 1941: Zuse Z3 (Deutschland) Hardware Schaltung (Relais) 1947: ENIAC (USA) Elektrische Schaltun...\\"}"]]},"headers":[{"level":2,"title":"1 Übersicht","slug":"_1-ubersicht","link":"#_1-ubersicht","children":[]},{"level":2,"title":"2 Grundlagen","slug":"_2-grundlagen","link":"#_2-grundlagen","children":[{"level":3,"title":"Von Neumann Architektur","slug":"von-neumann-architektur","link":"#von-neumann-architektur","children":[]},{"level":3,"title":"Harvard Architektur","slug":"harvard-architektur","link":"#harvard-architektur","children":[]},{"level":3,"title":"Instruction Set Architecture (ISA)","slug":"instruction-set-architecture-isa","link":"#instruction-set-architecture-isa","children":[]},{"level":3,"title":"Microarchitecture (Blackbox)","slug":"microarchitecture-blackbox","link":"#microarchitecture-blackbox","children":[]},{"level":3,"title":"Register","slug":"register","link":"#register","children":[]},{"level":3,"title":"Instruktionen","slug":"instruktionen","link":"#instruktionen","children":[]},{"level":3,"title":"Speicherzugriff","slug":"speicherzugriff","link":"#speicherzugriff","children":[]},{"level":3,"title":"5 Phasen der Ausführung","slug":"_5-phasen-der-ausfuhrung","link":"#_5-phasen-der-ausfuhrung","children":[]}]},{"level":2,"title":"3 RISC-V Grundlagen und Arithmetik","slug":"_3-risc-v-grundlagen-und-arithmetik","link":"#_3-risc-v-grundlagen-und-arithmetik","children":[{"level":3,"title":"RISC-V","slug":"risc-v","link":"#risc-v","children":[]},{"level":3,"title":"RISC-V Register","slug":"risc-v-register","link":"#risc-v-register","children":[]}]},{"level":2,"title":"4 Abstraktion und Hardware-Implementierung","slug":"_4-abstraktion-und-hardware-implementierung","link":"#_4-abstraktion-und-hardware-implementierung","children":[{"level":3,"title":"4.1 RISC-V Instruction Coding","slug":"_4-1-risc-v-instruction-coding","link":"#_4-1-risc-v-instruction-coding","children":[]},{"level":3,"title":"4.2 Von der Hochsprache zum Maschinencode","slug":"_4-2-von-der-hochsprache-zum-maschinencode","link":"#_4-2-von-der-hochsprache-zum-maschinencode","children":[]}]},{"level":2,"title":"5 CPU-Pipelining und Kontrollfluss","slug":"_5-cpu-pipelining-und-kontrollfluss","link":"#_5-cpu-pipelining-und-kontrollfluss","children":[{"level":3,"title":"5.1 Data Hazard","slug":"_5-1-data-hazard","link":"#_5-1-data-hazard","children":[]},{"level":3,"title":"5.2 Control Hazard","slug":"_5-2-control-hazard","link":"#_5-2-control-hazard","children":[]}]},{"level":2,"title":"6 Statische Branch Prediction","slug":"_6-statische-branch-prediction","link":"#_6-statische-branch-prediction","children":[{"level":3,"title":"6.1 Always","slug":"_6-1-always","link":"#_6-1-always","children":[]},{"level":3,"title":"6.2 Backward Taken, Forward Not Taken (BTFNT)","slug":"_6-2-backward-taken-forward-not-taken-btfnt","link":"#_6-2-backward-taken-forward-not-taken-btfnt","children":[]}]},{"level":2,"title":"7 Dynamische Branch Prediction","slug":"_7-dynamische-branch-prediction","link":"#_7-dynamische-branch-prediction","children":[{"level":3,"title":"7.1 1-Bit Prädiktor","slug":"_7-1-1-bit-pradiktor","link":"#_7-1-1-bit-pradiktor","children":[]},{"level":3,"title":"7.2 2-Bit Prädiktor","slug":"_7-2-2-bit-pradiktor","link":"#_7-2-2-bit-pradiktor","children":[]},{"level":3,"title":"7.3 2-Way Adaptive Predictor","slug":"_7-3-2-way-adaptive-predictor","link":"#_7-3-2-way-adaptive-predictor","children":[]},{"level":3,"title":"7.4 Branch Target Prediction","slug":"_7-4-branch-target-prediction","link":"#_7-4-branch-target-prediction","children":[]}]},{"level":2,"title":"8 Komplexes Pipelining","slug":"_8-komplexes-pipelining","link":"#_8-komplexes-pipelining","children":[{"level":3,"title":"8.1 Functional Units","slug":"_8-1-functional-units","link":"#_8-1-functional-units","children":[]},{"level":3,"title":"8.2 Memory Access","slug":"_8-2-memory-access","link":"#_8-2-memory-access","children":[]},{"level":3,"title":"8.3 Load-and-Store Optimierungen","slug":"_8-3-load-and-store-optimierungen","link":"#_8-3-load-and-store-optimierungen","children":[]}]},{"level":2,"title":"9 Out-of-Order Execution","slug":"_9-out-of-order-execution","link":"#_9-out-of-order-execution","children":[]},{"level":2,"title":"10 Speicher","slug":"_10-speicher","link":"#_10-speicher","children":[{"level":3,"title":"10.1 Nicht-volatile Speicher","slug":"_10-1-nicht-volatile-speicher","link":"#_10-1-nicht-volatile-speicher","children":[]},{"level":3,"title":"10.2 Volatile Speicher","slug":"_10-2-volatile-speicher","link":"#_10-2-volatile-speicher","children":[]}]},{"level":2,"title":"11 Cache","slug":"_11-cache","link":"#_11-cache","children":[{"level":3,"title":"11.1 Voll Assoziativer Speicher","slug":"_11-1-voll-assoziativer-speicher","link":"#_11-1-voll-assoziativer-speicher","children":[]},{"level":3,"title":"11.2 Direct-Mapped Cache","slug":"_11-2-direct-mapped-cache","link":"#_11-2-direct-mapped-cache","children":[]},{"level":3,"title":"11.3 n-Wege Assoziativer Cache","slug":"_11-3-n-wege-assoziativer-cache","link":"#_11-3-n-wege-assoziativer-cache","children":[]},{"level":3,"title":"11.4 Verdrängungsstrategien","slug":"_11-4-verdrangungsstrategien","link":"#_11-4-verdrangungsstrategien","children":[]}]}],"git":{"createdTime":1736800540000,"updatedTime":1736800540000,"contributors":[{"name":"Linus Englert","username":"Linus Englert","email":"linus@englert.cloud","commits":1,"url":"https://github.com/Linus Englert"}]},"readingTime":{"minutes":6.7,"words":2011},"filePathRelative":"posts/SoSe2024/Rechnerarchitektur.md","localizedDate":"July 21, 2024","excerpt":"\\n<h2>1 Übersicht</h2>\\n<p>Computerentwicklung</p>\\n<ul>\\n<li>um 1700: <strong>Leibniz Rechenmaschine</strong></li>\\n<li>1941: <strong>Zuse Z3</strong> (Deutschland)\\n<ul>\\n<li>Hardware Schaltung (Relais)</li>\\n</ul>\\n</li>\\n<li>1947: <strong>ENIAC</strong> (USA)\\n<ul>\\n<li>Elektrische Schaltung (&gt; 17000 Elektronenröhren, sehr anfällig!)</li>\\n<li>ab 1950 mit <strong>Transistoren</strong></li>\\n</ul>\\n</li>\\n<li>1968: IBM System/360 (Mainframe)</li>\\n<li>1976: Apple I (Minicomputer)</li>\\n<li>1981: IBM PC (Minicomputer)</li>\\n<li>1999: HP Workstation</li>\\n<li>2016: Dell Latitude</li>\\n<li>2018: Google Pixel 3 XL</li>\\n</ul>","autoDesc":true}');export{n1 as comp,a1 as data};
